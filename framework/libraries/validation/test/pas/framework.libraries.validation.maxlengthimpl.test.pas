unit Framework.Libraries.Validation.MaxLengthImpl.Test;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework,
  Framework.Libraries.Validation.Validate,
  Framework.Libraries.Validation.ValidateCustomAttributeImpl,
  Framework.Libraries.Validation.MaxLengthImpl,
  System.Rtti;

type
  // Test methods for class TMaxLength

  TestTMaxLength = class(TTestCase)
  strict private
    FMaxLength: TMaxLengthImpl;
  public
    const
    COLUMN_NAME: String = 'MyProp';
    MAX_LENGTH: Integer = 4;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure GetErrorMessage;
    procedure IsValidStringGreat;
    procedure IsValidStringEqual;
    procedure IsValidStringLittle;
    procedure IsValidCurrency;
    procedure IsValidInteger;
  end;

implementation

uses
  System.SysUtils,
  Framework.Libraries.Validation.ResourceStrings;



procedure TestTMaxLength.SetUp;
begin
  FMaxLength := TMaxLengthImpl.Create(MAX_LENGTH);
end;



procedure TestTMaxLength.TearDown;
begin
  FMaxLength.Free;
  FMaxLength := nil;
end;



procedure TestTMaxLength.GetErrorMessage;
begin
  CheckTrue(FMaxLength.GetErrorMessage = Format(TResourceStringsValidator.RSValidation_MaxLength,
    ['%s', MAX_LENGTH.ToString]), 'Erro ao formatar mensagem');
end;



procedure TestTMaxLength.IsValidCurrency;
var
  AValue: TValue;
begin
  AValue := 0123.4;
  CheckFalse(FMaxLength.isValid(AValue), 'Não valida length diferente de string');
end;



procedure TestTMaxLength.IsValidInteger;
var
  AValue: TValue;
begin
  AValue := 1234;
  CheckFalse(FMaxLength.isValid(AValue), 'Não valida length diferente de string');
end;



procedure TestTMaxLength.IsValidStringEqual;
var
  AValue: TValue;
begin
  AValue := 'abcd';
  CheckTrue(FMaxLength.isValid(AValue), 'A erro ao validar a string ' + AValue.ToString);
end;



procedure TestTMaxLength.IsValidStringGreat;
var
  AValue: TValue;
begin
  AValue := 'abcde';
  CheckFalse(FMaxLength.isValid(AValue), 'A erro ao validar a string ' + AValue.ToString);
end;



procedure TestTMaxLength.IsValidStringLittle;
var
  AValue: TValue;
begin
  AValue := 'abc';
  CheckTrue(FMaxLength.isValid(AValue), 'A erro ao validar a string ' + AValue.ToString);
end;

initialization

// Register any test cases with the test runner
RegisterTest(TestTMaxLength.Suite);

end.
